{"version":3,"file":"static/js/726.857bcd22.chunk.js","mappings":"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","sources":["app/addsNewCar/addsNewCar.js","app/index.js","components/Modal/Modal.js","schemas/addCarSchema.js","helpers/checkNameUnique.js","components/AddCarForm/AddCarForm.js","components/CarsBox/CarsBox.js","components/FilterPanel/FilterPanel.js","pages/Cars.js"],"sourcesContent":["import { db } from '../../firebase/config';\nimport { addDoc, collection } from 'firebase/firestore';\n\nexport const addsNewCar = async formData => {\n  try {\n    const docRef = await addDoc(collection(db, 'cars'), formData);\n    alert(`Автомобіль ${formData.name} успішно додано.`);\n    return docRef;\n  } catch (error) {\n    alert(`Помилка при додаванні автомобіля: ${formData.name}`, error);\n    return null;\n  }\n};\n","const { addsNewCar } = require('./addsNewCar/addsNewCar');\n\nmodule.exports = { addsNewCar };\n","import React from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/react';\nimport { createPortal } from 'react-dom';\n\nconst ModalWrapper = ({ isOpen, onClose, children }) => {\n  return createPortal(\n    <Modal isOpen={isOpen} onClose={onClose} size=\"lg\">\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Přidat auto</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody p={4}>{children}</ModalBody>\n      </ModalContent>\n    </Modal>,\n    document.getElementById('modal')\n  );\n};\n\nexport default ModalWrapper;\n","import { checkNameUnique } from 'helpers/checkNameUnique';\nimport * as Yup from 'yup';\n\nexport const validationAddCarSchema = Yup.object({\n  name: Yup.string()\n    .matches(\n      /^(CD|CDV|OV|D|EXP)\\d+$/,\n      'Název musí obsahovat typ a číslo, například \"CDV114\"'\n    )\n    .required('Název je povinný')\n    .test('unique', 'Toto auto již existuje', async value => {\n      if (!value) return false;\n      const isUnique = await checkNameUnique(value);\n      return isUnique;\n    }),\n  type: Yup.string().required('Typ je povinný'),\n  drivingStyle: Yup.string().required('Typ je povinný'),\n  comment: Yup.string(),\n});\n","import { db } from '../firebase/config';\nimport { collection, getDocs, query, where } from 'firebase/firestore';\n\nexport const checkNameUnique = async name => {\n  const carsCollection = collection(db, 'cars');\n  const q = query(carsCollection, where('name', '==', name));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.empty;\n};\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Switch,\n  Textarea,\n  VStack,\n} from '@chakra-ui/react';\nimport { Formik, Form, Field } from 'formik';\nimport { validationAddCarSchema } from 'schemas/addCarSchema';\n\nconst AddCarForm = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        type: '',\n        hasAirConditioner: false,\n        hasFridge: false,\n        comment: '',\n        drivingStyle: '',\n      }}\n      validationSchema={validationAddCarSchema}\n      onSubmit={values => {\n        onSubmit(values);\n      }}\n    >\n      {({ values, handleChange, setFieldValue, errors, touched }) => (\n        <Box as={Form} p={4} borderWidth={1} borderRadius=\"md\" boxShadow=\"md\">\n          <VStack spacing={4} align=\"stretch\">\n            {/* Pole \"název\" */}\n            <FormControl isInvalid={touched.name && errors.name} isRequired>\n              <FormLabel>Název (obsahuje typ a číslo)</FormLabel>\n              <Field\n                as={Input}\n                name=\"name\"\n                placeholder=\"Například CDV114\"\n                onChange={e =>\n                  setFieldValue('name', e.target.value.toUpperCase())\n                }\n              />\n              {touched.name && errors.name ? (\n                <Box color=\"red.500\">{errors.name}</Box>\n              ) : null}\n            </FormControl>\n\n            {/* Pole \"typ\" */}\n            <FormControl isInvalid={touched.type && errors.type} isRequired>\n              <FormLabel>Typ</FormLabel>\n              <Field as={Select} name=\"type\" placeholder=\"Vyberte typ\">\n                <option value=\"CD\">CD</option>\n                <option value=\"CDV\">CDV</option>\n                <option value=\"OV\">OV</option>\n                <option value=\"D\">D</option>\n                <option value=\"EXP\">EXP</option>\n              </Field>\n              {touched.type && errors.type ? (\n                <Box color=\"red.500\">{errors.type}</Box>\n              ) : null}\n            </FormControl>\n\n            {/* Přepínač pro \"Klimatizace\" */}\n            <FormControl display=\"flex\" alignItems=\"center\">\n              <FormLabel mb=\"0\">Klimatizace</FormLabel>\n              <Field\n                as={Switch}\n                name=\"hasAirConditioner\"\n                colorScheme=\"green\"\n                isChecked={values.hasAirConditioner}\n                onChange={() =>\n                  setFieldValue('hasAirConditioner', !values.hasAirConditioner)\n                }\n              />\n            </FormControl>\n\n            {/* Přepínač pro \"Vestavba (ledničce)\" */}\n            <FormControl display=\"flex\" alignItems=\"center\">\n              <FormLabel mb=\"0\">Vestavba (ledničce)</FormLabel>\n              <Field\n                as={Switch}\n                name=\"hasFridge\"\n                colorScheme=\"green\"\n                isChecked={values.hasFridge}\n                onChange={() => setFieldValue('hasFridge', !values.hasFridge)}\n              />\n            </FormControl>\n\n            {/* Styl jízdy */}\n            <FormControl>\n              <FormLabel>Styl jízdy</FormLabel>\n              <Field\n                as={Select}\n                name=\"drivingStyle\"\n                placeholder=\"Vyberte styl jízdy\"\n              >\n                <option value=\"A\">A</option>\n                <option value=\"B\">B</option>\n                <option value=\"C\">C</option>\n                <option value=\"0\">0</option>\n              </Field>\n            </FormControl>\n\n            {/* Pole \"Komentář k autu\" */}\n            <FormControl>\n              <FormLabel>Komentář k autu</FormLabel>\n              <Field\n                as={Textarea}\n                name=\"comment\"\n                placeholder=\"Přidejte komentář...\"\n              />\n            </FormControl>\n\n            {/* Tlačítko odeslání */}\n            <Button\n              type=\"submit\"\n              bg=\"#6da305\"\n              color=\"white\"\n              _hover={{ bg: '#5c8e04' }}\n            >\n              Přidat auto\n            </Button>\n          </VStack>\n        </Box>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddCarForm;\n","import React, { useEffect, useState } from 'react';\nimport { db } from '../../firebase/config';\nimport { collection, onSnapshot } from 'firebase/firestore';\nimport { Box, Text, Grid, Switch, Flex } from '@chakra-ui/react';\nimport { FaCar, FaSnowflake, FaBox } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nconst CarsBox = ({ filters }) => {\n  const { search, filter, hasAirConditioner, hasFridge } = filters;\n  const [cars, setCars] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const carsCollection = collection(db, 'cars');\n\n    const unsubscribe = onSnapshot(carsCollection, snapshot => {\n      const carsData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n\n      const filteredCars = carsData.filter(car => {\n        const matchesSearch = car.name.includes(search);\n        const matchesType = filter ? car.type === filter : true;\n        const matchesAirConditioner = hasAirConditioner\n          ? car.hasAirConditioner === true\n          : true;\n        const matchesFridge = hasFridge ? car.hasFridge === true : true;\n        return (\n          matchesSearch && matchesType && matchesAirConditioner && matchesFridge\n        );\n      });\n      setCars(filteredCars);\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, [filter, hasAirConditioner, hasFridge, search]);\n\n  // Іконка для стилю їзди залежно від значення drivingStyle\n  const getDrivingStyle = style => {\n    switch (style) {\n      case 'A':\n        return '#59c959';\n      case 'B':\n        return '#ecd950';\n      case 'C':\n        return '#ff5151';\n      case '0':\n      default:\n        return '#e0e0e0';\n    }\n  };\n\n  return (\n    <Box p={4}>\n      <Grid templateColumns=\"repeat(3, 1fr)\" gap={6}>\n        {cars.map(car => (\n          <Link key={car.id} to={`/cars/${car.id}`}>\n            <Flex\n              alignItems=\"center\"\n              gap={4}\n              p={3}\n              borderWidth={1}\n              borderRadius=\"md\"\n              boxShadow=\"md\"\n              bg={getDrivingStyle(car.drivingStyle)}\n            >\n              {/* Name */}\n              <Text fontWeight=\"bold\" fontSize=\"lg\">\n                {car.name}\n              </Text>\n\n              {/* Перемикачі */}\n              <Box display=\"flex\" alignItems=\"center\" mt={2}>\n                <FaSnowflake color={car.hasAirConditioner ? 'green' : 'gray'} />\n                <Switch\n                  ml={2}\n                  colorScheme=\"green\"\n                  isChecked={car.hasAirConditioner}\n                  isReadOnly // Робимо перемикачі тільки для перегляду\n                />\n              </Box>\n\n              <Box display=\"flex\" alignItems=\"center\" mt={2}>\n                <FaBox color={car.hasFridge ? 'green' : 'gray'} />\n                <Switch\n                  ml={2}\n                  colorScheme=\"green\"\n                  isChecked={car.hasFridge}\n                  isReadOnly\n                />\n              </Box>\n\n              {/* Іконка для стилю їзди */}\n              <Box display=\"flex\" alignItems=\"center\" mt={2}>\n                <FaCar size=\"30px\" color=\"green\" />\n                <Text ml={2} fontSize={26}>\n                  {car.drivingStyle}\n                </Text>\n              </Box>\n            </Flex>\n          </Link>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default CarsBox;\n","import React from 'react';\nimport {\n  Flex,\n  InputGroup,\n  InputLeftElement,\n  Input,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Button,\n  Icon,\n  Switch,\n} from '@chakra-ui/react';\nimport { IoSearch } from 'react-icons/io5';\nimport { ChevronDownIcon, AddIcon } from '@chakra-ui/icons';\nimport { FaSnowflake, FaBox } from 'react-icons/fa';\n\nconst FilterPanel = ({\n  search,\n  setSearch,\n  filter,\n  setFilter,\n  hasAirConditioner,\n  setHasAirConditioner,\n  hasFridge,\n  setHasFridge,\n  setIsOpenModalAddCar,\n}) => {\n  // Функція для обробки вибору типу авто\n  const handleSelect = type => {\n    setFilter(type);\n  };\n\n  return (\n    <Flex gap={4}>\n      {/* Поле пошуку */}\n      <InputGroup>\n        <InputLeftElement pointerEvents=\"none\">\n          <IoSearch color=\"gray.300\" />\n        </InputLeftElement>\n        <Input\n          w={400}\n          value={search}\n          onChange={e => {\n            setSearch(e.target.value.toUpperCase());\n          }}\n          placeholder=\"Search\"\n        />\n      </InputGroup>\n\n      <Flex gap={4} align=\"center\">\n        {/* Вибір типу авто */}\n        <Menu>\n          <MenuButton as={Button} rightIcon={<ChevronDownIcon />} w=\"80px\">\n            {filter || 'Type'}\n          </MenuButton>\n          <MenuList minW=\"80px\">\n            <MenuItem onClick={() => handleSelect('')}>Type</MenuItem>\n            <MenuItem onClick={() => handleSelect('CDV')}>CDV</MenuItem>\n            <MenuItem onClick={() => handleSelect('CD')}>CD</MenuItem>\n            <MenuItem onClick={() => handleSelect('D')}>D</MenuItem>\n            <MenuItem onClick={() => handleSelect('OV')}>OV</MenuItem>\n            <MenuItem onClick={() => handleSelect('EXP')}>EXP</MenuItem>\n          </MenuList>\n        </Menu>\n\n        {/* Перемикач для кондиціонера */}\n        <Flex align=\"center\">\n          <Icon\n            as={FaSnowflake}\n            boxSize={5}\n            mr={2}\n            color={hasAirConditioner ? 'green.500' : 'gray.500'}\n          />\n          <Switch\n            colorScheme=\"green\"\n            isChecked={hasAirConditioner}\n            onChange={() => setHasAirConditioner(!hasAirConditioner)}\n          />\n        </Flex>\n\n        {/* Перемикач для холодильника */}\n        <Flex align=\"center\">\n          <Icon as={FaBox} boxSize={5} mr={2} />\n          <Switch\n            colorScheme=\"green\"\n            isChecked={hasFridge}\n            onChange={() => setHasFridge(!hasFridge)}\n          />\n        </Flex>\n\n        {/* Кнопка додавання авто */}\n        <Button\n          leftIcon={<AddIcon />}\n          bg=\"#6da305\"\n          color=\"white\"\n          _hover={{ bg: '#5c8e04' }}\n          onClick={() => setIsOpenModalAddCar(true)}\n        >\n          přidat auto\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default FilterPanel;\n","import { Container } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport ModalWrapper from 'components/Modal/Modal';\nimport AddCarForm from 'components/AddCarForm/AddCarForm';\nimport { addsNewCar } from 'app';\nimport CarsBox from 'components/CarsBox/CarsBox';\nimport FilterPanel from 'components/FilterPanel/FilterPanel';\n\nconst Cars = () => {\n  const [isOpenModalAddCar, setIsOpenModalAddCar] = useState(false);\n  const [search, setSearch] = useState('');\n  console.log('search', search);\n\n  const [filter, setFilter] = useState('');\n  const [hasAirConditioner, setHasAirConditioner] = useState(false);\n  const [hasFridge, setHasFridge] = useState(false);\n\n  const handleSubmitAddCar = async formData => {\n    await addsNewCar(formData);\n    setIsOpenModalAddCar(false);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Cars</title>\n      </Helmet>\n\n      <Container maxW={'max-content'}>\n        {/* Панель фільтрів */}\n        <FilterPanel\n          search={search}\n          setSearch={setSearch}\n          filter={filter}\n          setFilter={setFilter}\n          hasAirConditioner={hasAirConditioner}\n          setHasAirConditioner={setHasAirConditioner}\n          hasFridge={hasFridge}\n          setHasFridge={setHasFridge}\n          setIsOpenModalAddCar={setIsOpenModalAddCar}\n        />\n        <CarsBox\n          filters={{\n            search,\n            filter,\n            hasAirConditioner,\n            hasFridge,\n          }}\n        />\n      </Container>\n\n      {isOpenModalAddCar && (\n        <ModalWrapper\n          isOpen={isOpenModalAddCar}\n          onClose={() => setIsOpenModalAddCar(false)}\n        >\n          <AddCarForm onSubmit={handleSubmitAddCar} />\n        </ModalWrapper>\n      )}\n    </>\n  );\n};\n\nexport default Cars;\n"],"names":["addsNewCar","async","docRef","addDoc","collection","db","formData","alert","concat","name","error","require","module","exports","_ref","isOpen","onClose","children","createPortal","_jsxs","Modal","size","_jsx","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","p","document","getElementById","validationAddCarSchema","Yup","matches","required","test","value","carsCollection","q","query","where","getDocs","empty","checkNameUnique","type","drivingStyle","comment","onSubmit","Formik","initialValues","hasAirConditioner","hasFridge","validationSchema","values","_ref2","handleChange","setFieldValue","errors","touched","Box","as","Form","borderWidth","borderRadius","boxShadow","VStack","spacing","align","FormControl","isInvalid","isRequired","FormLabel","Field","Input","placeholder","onChange","e","target","toUpperCase","color","Select","display","alignItems","mb","Switch","colorScheme","isChecked","Textarea","Button","bg","_hover","filters","search","filter","cars","setCars","useState","loading","setLoading","useEffect","unsubscribe","onSnapshot","snapshot","filteredCars","docs","map","doc","id","data","car","matchesSearch","includes","matchesType","matchesAirConditioner","matchesFridge","getDrivingStyle","style","Grid","templateColumns","gap","Link","to","Flex","Text","fontWeight","fontSize","mt","FaSnowflake","ml","isReadOnly","FaBox","FaCar","setSearch","setFilter","setHasAirConditioner","setHasFridge","setIsOpenModalAddCar","handleSelect","InputGroup","InputLeftElement","pointerEvents","IoSearch","w","Menu","MenuButton","rightIcon","ChevronDownIcon","MenuList","minW","MenuItem","onClick","Icon","boxSize","mr","leftIcon","AddIcon","Cars","isOpenModalAddCar","console","log","_Fragment","Helmet","Container","maxW","FilterPanel","CarsBox","ModalWrapper","AddCarForm"],"sourceRoot":""}