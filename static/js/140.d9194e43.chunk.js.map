{"version":3,"file":"static/js/140.d9194e43.chunk.js","mappings":"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","sources":["helpers/getColorDrivingStyle.js","helpers/getSortCars.js","components/CarsBox/CarsBox.js","components/FilterMobMenu/FilterMobMenu.js","components/FilterPanel/FilterPanel.js","components/Modals/ModalScan/AnnotatedImage.js","components/Modals/ModalScan/OCRScanner.js","components/Modals/ModalScan/ModalScan.js","pages/Cars.js"],"sourcesContent":["export const getColorDrivingStyle = style => {\n  switch (style) {\n    case 'A':\n      return '#59c959';\n    case 'B':\n      return '#ecd950';\n    case 'C':\n      return '#ff5151';\n    case 'A/B':\n      return 'linear-gradient(-8deg, #ecd950 45%, #59c959 55%)';\n    case '0':\n    default:\n      return '#e0e0e0';\n  }\n};\n","export const getSortCars = (a, b) => {\n  const regex = /^([a-zA-Z]+)(\\d+)$/; // Розбиває на текстову і числову частини\n\n  const [, textA, numberA] = a.name.match(regex) || [];\n  const [, textB, numberB] = b.name.match(regex) || [];\n\n  // Сортування за текстовою частиною\n  const textComparison = textA.localeCompare(textB);\n  if (textComparison !== 0) {\n    return textComparison;\n  }\n\n  // Сортування за числовою частиною\n  return parseInt(numberA, 10) - parseInt(numberB, 10);\n};\n","import React, { useEffect, useState } from 'react';\nimport { db } from '../../firebase/config';\nimport { collection, onSnapshot } from 'firebase/firestore';\nimport { Box, Text, Grid, Flex } from '@chakra-ui/react';\nimport { FaSnowflake, FaBox } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { getColorDrivingStyle } from 'helpers/getColorDrivingStyle';\nimport { GiHotSurface } from 'react-icons/gi';\nimport { getSortCars } from 'helpers/getSortCars';\nimport { MdVolumeOff } from 'react-icons/md';\n\nconst CarsBox = ({ filters, isGridView }) => {\n  const {\n    search,\n    typeCars,\n    drivingStyle,\n    hasAirConditioner,\n    hasFridge,\n    hasHeating,\n    hasSoundProofed,\n  } = filters;\n  const [cars, setCars] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const carsCollection = collection(db, 'cars');\n\n    const unsubscribe = onSnapshot(carsCollection, snapshot => {\n      const carsData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n\n      const filteredCars = carsData.filter(car => {\n        const matchesSearch = car.name.includes(search);\n        const matchesType = typeCars ? car.type === typeCars : true;\n        const matchesTypeDrivingStyle = drivingStyle\n          ? car.drivingStyle === drivingStyle\n          : true;\n        const matchesAirConditioner = hasAirConditioner\n          ? car.hasAirConditioner === true\n          : true;\n        const matchesFridge = hasFridge ? car.hasFridge === true : true;\n        const matchesHeating = hasHeating ? car.hasHeating === true : true;\n        const matchesSoundProofed = hasSoundProofed\n          ? car.hasSoundProofed === true\n          : true;\n        return (\n          matchesSearch &&\n          matchesType &&\n          matchesAirConditioner &&\n          matchesFridge &&\n          matchesTypeDrivingStyle &&\n          matchesHeating &&\n          matchesSoundProofed\n        );\n      });\n      setCars(filteredCars);\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, [\n    typeCars,\n    drivingStyle,\n    hasAirConditioner,\n    hasFridge,\n    search,\n    hasHeating,\n    hasSoundProofed,\n  ]);\n\n  return isGridView ? (\n    <Grid\n      pt={4}\n      w={'100%'}\n      templateColumns={{\n        base: 'repeat(4, 1fr)',\n        md: 'repeat(6, 1fr)',\n        xl: 'repeat(10, 1fr)',\n      }}\n      gap={{ base: 1, md: 6, xl: 2 }}\n    >\n      {cars\n        .sort((a, b) => getSortCars(a, b))\n        .map(car => (\n          <Link key={car.id} to={`/cars/${car.id}`}>\n            <Flex\n              w={'100%'}\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              justify=\"space-between\"\n              gap={1}\n              p={{ base: 0, md: 3 }}\n              borderWidth={1}\n              borderRadius=\"md\"\n              boxShadow=\"md\"\n              bg={getColorDrivingStyle(car.drivingStyle)}\n            >\n              {/* Name */}\n              <Text fontWeight=\"bold\" fontSize={14}>\n                {car.name}\n              </Text>\n\n              <Box display=\"flex\" gap={1}>\n                {/* Перемикачі */}\n                <Box display=\"flex\" alignItems=\"center\">\n                  <FaSnowflake\n                    color={car.hasAirConditioner ? 'green' : 'red'}\n                  />\n                </Box>\n\n                {'hasHeating' in car && (\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <GiHotSurface color={car.hasHeating ? 'green' : 'red'} />\n                  </Box>\n                )}\n\n                <Box display=\"flex\" alignItems=\"center\">\n                  <FaBox color={car.hasFridge ? 'green' : 'red'} />\n                </Box>\n\n                {'hasSoundProofed' in car && (\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <MdVolumeOff\n                      color={car.hasSoundProofed ? 'green' : 'red'}\n                    />\n                  </Box>\n                )}\n              </Box>\n            </Flex>\n          </Link>\n        ))}\n    </Grid>\n  ) : (\n    <Grid\n      pt={4}\n      w={'100%'}\n      templateColumns={{ base: 'repeat(1, 1fr)', md: 'repeat(3, 1fr)' }}\n      gap={{ base: 3, md: 6 }}\n    >\n      {cars\n        .sort((a, b) => getSortCars(a, b))\n        .map(car => (\n          <Link key={car.id} to={`/cars/${car.id}`}>\n            <Flex\n              w={'100%'}\n              alignItems=\"center\"\n              justify=\"space-between\"\n              gap={4}\n              p={{ base: 1, md: 3 }}\n              borderWidth={1}\n              borderRadius=\"md\"\n              boxShadow=\"md\"\n              bg={getColorDrivingStyle(car.drivingStyle)}\n            >\n              {/* Name */}\n              <Text fontWeight=\"bold\" fontSize=\"lg\">\n                {car.name}\n              </Text>\n\n              <Box display=\"flex\" gap={1}>\n                {/* Перемикачі */}\n                <Box display=\"flex\" alignItems=\"center\">\n                  <FaSnowflake\n                    color={car.hasAirConditioner ? 'green' : 'red'}\n                  />\n                </Box>\n\n                {'hasHeating' in car && (\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <GiHotSurface color={car.hasHeating ? 'green' : 'red'} />\n                  </Box>\n                )}\n\n                <Box display=\"flex\" alignItems=\"center\">\n                  <FaBox color={car.hasFridge ? 'green' : 'red'} />\n                </Box>\n\n                {'hasSoundProofed' in car && (\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <MdVolumeOff\n                      color={car.hasSoundProofed ? 'green' : 'red'}\n                    />\n                  </Box>\n                )}\n\n                {/* Іконка для стилю їзди */}\n                <Box display=\"flex\" alignItems=\"center\" px={1}>\n                  <Text fontSize={22}>{car.drivingStyle}</Text>\n                </Box>\n              </Box>\n            </Flex>\n          </Link>\n        ))}\n    </Grid>\n  );\n};\n\nexport default CarsBox;\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Box,\n  IconButton,\n  VStack,\n  Checkbox,\n  Button,\n  useDisclosure,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Text,\n} from '@chakra-ui/react';\nimport { CloseIcon, ChevronDownIcon } from '@chakra-ui/icons';\nimport { FaFilter } from 'react-icons/fa';\nimport { FaFilterCircleXmark } from 'react-icons/fa6';\nimport { motion } from 'framer-motion';\n\nconst MotionBox = motion(Box);\n\nconst FilterMobMenu = ({\n  typeCars,\n  setTypeCars,\n  drivingStyle,\n  setDrivingStyle,\n  hasAirConditioner,\n  setHasAirConditioner,\n  hasFridge,\n  setHasFridge,\n  hasHeating,\n  setHasHeating,\n  hasSoundProofed,\n  setHasSoundProofed,\n}) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [startY, setStartY] = useState(0);\n  const filterMenuRef = useRef();\n\n  const activeFilters = [\n    typeCars,\n    drivingStyle,\n    hasAirConditioner,\n    hasFridge,\n    hasHeating,\n    hasSoundProofed,\n  ].filter(Boolean).length;\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (\n        filterMenuRef.current &&\n        !filterMenuRef.current.contains(event.target)\n      ) {\n        onClose();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [onClose]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.classList.add('no-scroll');\n    } else {\n      document.body.classList.remove('no-scroll');\n    }\n\n    return () => {\n      document.body.classList.remove('no-scroll');\n    };\n  }, [isOpen]);\n\n  const handleCleanFilter = () => {\n    setTypeCars('');\n    setDrivingStyle('');\n    setHasAirConditioner(null);\n    setHasFridge(null);\n    setHasHeating(null);\n    setHasSoundProofed(null);\n    onClose();\n  };\n\n  // Початок свайпу\n  const handleTouchStart = e => {\n    console.log(e.touches[0].clientY);\n    setStartY(e.touches[0].clientY);\n  };\n\n  // Закінчення свайпу\n  const handleTouchEnd = e => {\n    const endY = e.changedTouches[0].clientY;\n\n    // Якщо рух вгору (координата зменшується), закриваємо меню\n    if (startY - endY > 50) {\n      onClose();\n    }\n  };\n\n  return (\n    <Box display={{ base: 'block', xl: 'none' }} ref={filterMenuRef}>\n      {/* Кнопка для відкриття фільтр-меню */}\n      <Box position=\"relative\">\n        <IconButton\n          icon={isOpen ? <CloseIcon /> : <FaFilter />}\n          onClick={isOpen ? onClose : onOpen}\n          aria-label=\"Open Filter Menu\"\n          position=\"relative\"\n        />\n        {activeFilters > 0 && (\n          <Box\n            position=\"absolute\"\n            top=\"-5px\"\n            right=\"-5px\"\n            fontSize=\"10px\"\n            color=\"white\"\n            bg=\"red.500\"\n            borderRadius=\"full\"\n            width=\"15px\"\n            height=\"15px\"\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            {activeFilters}\n          </Box>\n        )}\n      </Box>\n\n      {/* Фільтр-меню */}\n      <MotionBox\n        initial={{ height: 0, opacity: 0 }} // Початковий стан\n        animate={\n          isOpen ? { height: 'auto', opacity: 1 } : { height: 0, opacity: 0 }\n        }\n        overflow=\"hidden\" // Важливо для приховування контенту\n        position=\"absolute\"\n        top=\"60px\"\n        left=\"0\"\n        width=\"100%\"\n        bg=\"white\"\n        zIndex=\"overlay\"\n        boxShadow=\"md\"\n        p={isOpen ? 4 : 0}\n        onTouchStart={handleTouchStart}\n        onTouchEnd={handleTouchEnd}\n        transition={{ height: { duration: 0.4 }, opacity: { duration: 0.8 } }} // Тривалість анімації\n      >\n        <VStack align=\"start\" spacing={4}>\n          <Box\n            w=\"100%\"\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            ml=\"auto\"\n            position=\"relative\"\n          >\n            <Text>Filtry: </Text>\n            <IconButton\n              size={'md'}\n              icon={<FaFilterCircleXmark />}\n              onClick={handleCleanFilter}\n              aria-label=\"Clear Filter\"\n              position=\"relative\"\n            />\n            {activeFilters > 0 && (\n              <Box\n                position=\"absolute\"\n                top=\"-5px\"\n                right=\"-5px\"\n                fontSize=\"10px\"\n                color=\"white\"\n                bg=\"red.500\"\n                borderRadius=\"full\"\n                width=\"15px\"\n                height=\"15px\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                {activeFilters}\n              </Box>\n            )}\n          </Box>\n          {/* Вибір типу авто */}\n          <Menu>\n            <MenuButton as={Button} rightIcon={<ChevronDownIcon />} w=\"100%\">\n              {typeCars || 'Typ auta:'}\n            </MenuButton>\n            <MenuList w=\"100%\">\n              <MenuItem w=\"100%\" onClick={() => setTypeCars('')}>\n                Vše\n              </MenuItem>\n              <MenuItem w=\"100%\" onClick={() => setTypeCars('CDV')}>\n                CDV\n              </MenuItem>\n              <MenuItem w=\"100%\" onClick={() => setTypeCars('CD')}>\n                CD\n              </MenuItem>\n              <MenuItem w=\"100%\" onClick={() => setTypeCars('D')}>\n                D\n              </MenuItem>\n              <MenuItem w=\"100%\" onClick={() => setTypeCars('OV')}>\n                OV\n              </MenuItem>\n              <MenuItem w=\"100%\" onClick={() => setTypeCars('EXP')}>\n                EXP\n              </MenuItem>\n            </MenuList>\n          </Menu>\n          {/* Вибір стилю їзди */}\n          <Menu>\n            <MenuButton as={Button} rightIcon={<ChevronDownIcon />} w=\"100%\">\n              {drivingStyle || 'Styl jízdy:'}\n            </MenuButton>\n            <MenuList w=\"100%\">\n              <MenuItem w=\"100%\" onClick={() => setDrivingStyle('')}>\n                Vše\n              </MenuItem>\n              <MenuItem w=\"100%\" onClick={() => setDrivingStyle('A')}>\n                A\n              </MenuItem>\n              <MenuItem w=\"100%\" onClick={() => setDrivingStyle('B')}>\n                B\n              </MenuItem>\n              <MenuItem w=\"100%\" onClick={() => setDrivingStyle('C')}>\n                C\n              </MenuItem>\n              <MenuItem w=\"100%\" onClick={() => setDrivingStyle('A/B')}>\n                A/B\n              </MenuItem>\n              <MenuItem w=\"100%\" onClick={() => setDrivingStyle('0')}>\n                0\n              </MenuItem>\n            </MenuList>\n          </Menu>\n          {/* Перемикач для кондиціонера */}\n          <Checkbox\n            name=\"hasAirConditioner\"\n            isChecked={hasAirConditioner}\n            onChange={() => {\n              setHasAirConditioner(prev => !prev);\n            }}\n          >\n            Klimatizace\n          </Checkbox>\n          {/* Перемикач для Topení: */}\n          <Checkbox\n            name=\"hasHeating\"\n            isChecked={hasHeating}\n            onChange={() => {\n              setHasHeating(prev => !prev);\n            }}\n          >\n            Topení:\n          </Checkbox>\n          {/* Перемикач для вбудованої системи */}\n          <Checkbox\n            name=\"hasFridge\"\n            isChecked={hasFridge}\n            onChange={() => setHasFridge(prev => !prev)}\n          >\n            Vestavba (lednička)\n          </Checkbox>\n          {/* Перемикач для Odhlučněné */}\n          <Checkbox\n            name=\"hasSoundProofed\"\n            isChecked={hasSoundProofed}\n            onChange={() => setHasSoundProofed(prev => !prev)}\n          >\n            Odhlučněné\n          </Checkbox>\n        </VStack>\n        {/* Tlačítko použití */}\n        <Button\n          bgColor=\"#6da305\"\n          color=\"white\"\n          mt={4}\n          w=\"100%\"\n          onClick={onClose}\n        >\n          Použít filtry\n        </Button>\n      </MotionBox>\n    </Box>\n  );\n};\n\nexport default FilterMobMenu;\n","import React from 'react';\nimport {\n  Flex,\n  InputGroup,\n  InputLeftElement,\n  Input,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Button,\n  Icon,\n  Switch,\n  Box,\n  IconButton,\n} from '@chakra-ui/react';\nimport { IoSearch } from 'react-icons/io5';\nimport { ChevronDownIcon, AddIcon } from '@chakra-ui/icons';\nimport { FaSnowflake, FaBox } from 'react-icons/fa';\nimport FilterMobMenu from 'components/FilterMobMenu/FilterMobMenu';\nimport ListViewSwitcher from 'components/ListViewSwitcher/ListViewSwitcher';\nimport { GiHotSurface } from 'react-icons/gi';\nimport { MdVolumeOff } from 'react-icons/md';\nimport { IoScan } from 'react-icons/io5';\n\nconst FilterPanel = ({\n  search,\n  setSearch,\n  typeCars,\n  setTypeCars,\n  drivingStyle,\n  setDrivingStyle,\n  hasAirConditioner,\n  setHasAirConditioner,\n  hasFridge,\n  setHasFridge,\n  setIsOpenModalAddCar,\n  isGridView,\n  setIsGridView,\n  hasHeating,\n  setHasHeating,\n  hasSoundProofed,\n  setHasSoundProofed,\n  setIsOpenModalScan,\n}) => {\n  const handleSelect = type => {\n    setTypeCars(type);\n  };\n\n  return (\n    <Flex gap={2}>\n      <IconButton\n        color=\"#6da305\"\n        icon={<IoScan />}\n        onClick={() => setIsOpenModalScan(true)}\n        aria-label=\"Open Modal Add Cars\"\n        position=\"relative\"\n      />\n\n      {/* Поле пошуку */}\n      <InputGroup>\n        <InputLeftElement pointerEvents=\"none\">\n          <IoSearch color=\"gray.300\" />\n        </InputLeftElement>\n        <Input\n          w={{ base: '100%', md: '300px', xl: '500px' }}\n          value={search}\n          onChange={e => {\n            setSearch(e.target.value.toUpperCase());\n          }}\n          placeholder=\"Search\"\n        />\n      </InputGroup>\n\n      <ListViewSwitcher isGridView={isGridView} setIsGridView={setIsGridView} />\n\n      <Box display={{ base: 'flex', xl: 'none' }} gap={2}>\n        <FilterMobMenu\n          typeCars={typeCars}\n          setTypeCars={setTypeCars}\n          drivingStyle={drivingStyle}\n          setDrivingStyle={setDrivingStyle}\n          hasAirConditioner={hasAirConditioner}\n          setHasAirConditioner={setHasAirConditioner}\n          hasFridge={hasFridge}\n          setHasFridge={setHasFridge}\n          hasHeating={hasHeating}\n          setHasHeating={setHasHeating}\n          hasSoundProofed={hasSoundProofed}\n          setHasSoundProofed={setHasSoundProofed}\n        />\n        <IconButton\n          bg=\"#6da305\"\n          color=\"white\"\n          _hover={{ bg: '#5c8e04' }}\n          icon={<AddIcon />}\n          onClick={() => setIsOpenModalAddCar(true)}\n          aria-label=\"Open Modal Add Cars\"\n          position=\"relative\"\n        />\n      </Box>\n      <Box display={{ base: 'none', xl: 'block' }}>\n        <Flex gap={4} align=\"center\">\n          {/* Вибір типу авто */}\n          <Menu>\n            <MenuButton as={Button} rightIcon={<ChevronDownIcon />} w=\"80px\">\n              {typeCars || 'Type'}\n            </MenuButton>\n            <MenuList minW=\"80px\">\n              <MenuItem onClick={() => handleSelect('')}>Type</MenuItem>\n              <MenuItem onClick={() => handleSelect('CDV')}>CDV</MenuItem>\n              <MenuItem onClick={() => handleSelect('CD')}>CD</MenuItem>\n              <MenuItem onClick={() => handleSelect('D')}>D</MenuItem>\n              <MenuItem onClick={() => handleSelect('OV')}>OV</MenuItem>\n              <MenuItem onClick={() => handleSelect('EXP')}>EXP</MenuItem>\n            </MenuList>\n          </Menu>\n          {/* Перемикач для кондиціонера */}\n          <Flex align=\"center\">\n            <Icon\n              as={FaSnowflake}\n              boxSize={5}\n              mr={2}\n              color={hasAirConditioner ? 'green.500' : 'gray.500'}\n            />\n            <Switch\n              colorScheme=\"green\"\n              isChecked={hasAirConditioner}\n              onChange={() => setHasAirConditioner(!hasAirConditioner)}\n            />\n          </Flex>\n          {/* Перемикач для Topení */}\n          <Flex align=\"center\">\n            <Icon\n              as={GiHotSurface}\n              boxSize={5}\n              mr={2}\n              color={hasHeating ? 'green.500' : 'gray.500'}\n            />\n            <Switch\n              colorScheme=\"green\"\n              isChecked={hasHeating}\n              onChange={() => setHasHeating(!hasHeating)}\n            />\n          </Flex>\n\n          {/* Перемикач для холодильника */}\n          <Flex align=\"center\">\n            <Icon\n              as={FaBox}\n              boxSize={5}\n              mr={2}\n              color={hasFridge ? 'green.500' : 'gray.500'}\n            />\n            <Switch\n              colorScheme=\"green\"\n              isChecked={hasFridge}\n              onChange={() => setHasFridge(!hasFridge)}\n            />\n          </Flex>\n\n          {/* Перемикач для холодильника */}\n          <Flex align=\"center\">\n            <Icon\n              as={MdVolumeOff}\n              boxSize={5}\n              mr={2}\n              color={hasSoundProofed ? 'green.500' : 'gray.500'}\n            />\n            <Switch\n              colorScheme=\"green\"\n              isChecked={hasSoundProofed}\n              onChange={() => setHasSoundProofed(!hasSoundProofed)}\n            />\n          </Flex>\n\n          {/* Кнопка додавання авто */}\n          <Button\n            leftIcon={<AddIcon />}\n            bg=\"#6da305\"\n            color=\"white\"\n            _hover={{ bg: '#5c8e04' }}\n            onClick={() => setIsOpenModalAddCar(true)}\n          >\n            přidat auto\n          </Button>\n        </Flex>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default FilterPanel;\n","import React, { useRef, useEffect } from 'react';\n\nconst AnnotatedImage = ({ imageSrc, annotations }) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const image = new Image();\n\n    image.onload = () => {\n      // Налаштування розмірів canvas відповідно до зображення\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      // Малюємо зображення\n      ctx.drawImage(image, 0, 0);\n\n      // Малюємо квадратики поверх зображення\n      if (annotations) {\n        annotations.forEach(annotation => {\n          const vertices = annotation.boundingBox.vertices;\n\n          ctx.beginPath();\n          ctx.moveTo(vertices[0].x, vertices[0].y); // Початкова точка\n          vertices.forEach((vertex, index) => {\n            if (index > 0) {\n              ctx.lineTo(vertex.x, vertex.y); // Малюємо лінію до наступної вершини\n            }\n          });\n          ctx.closePath(); // Замикаємо контур\n          ctx.lineWidth = 2;\n          ctx.strokeStyle = 'red'; // Червоний колір рамки\n          ctx.stroke();\n        });\n      }\n    };\n\n    image.src = imageSrc; // Завантажуємо зображення\n  }, [imageSrc, annotations]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      style={{ width: '100%', border: '1px solid black' }}\n    />\n  );\n};\n\nexport default AnnotatedImage;\n","import { Box, Flex } from '@chakra-ui/react';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport AnnotatedImage from './AnnotatedImage';\n\nconst OCRScanner = ({ onRecognized }) => {\n  // eslint-disable-next-line no-unused-vars\n  const [isProcessing, setIsProcessing] = useState(false);\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [annotations, setAnnotations] = useState(null);\n\n  const startCamera = useCallback(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: { facingMode: 'environment' } })\n      .then(stream => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.play();\n        }\n      })\n      .catch(error => {\n        console.error('Error accessing camera:', error);\n        alert('Не вдалося отримати доступ до камери.');\n      });\n  }, []);\n\n  useEffect(() => {\n    startCamera(); // Запускаємо камеру при завантаженні компонента\n\n    return () => {\n      // Зупиняємо камеру при розмонтуванні\n      if (videoRef.current && videoRef.current.srcObject) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [startCamera]);\n\n  const handleCapture = async () => {\n    setIsProcessing(true);\n\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n\n    if (canvas && video) {\n      const ctx = canvas.getContext('2d');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      const image = canvas.toDataURL('image/png'); // Перетворення кадру в Base64-формат\n\n      setImage(image);\n      // Викликаємо Vision API\n      try {\n        const response = await fetch(\n          `https://vision.googleapis.com/v1/images:annotate?key=${process.env.REACT_APP_CLOUD_VISION_API_KEY}`,\n          {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              requests: [\n                {\n                  image: {\n                    content: image.split(',')[1], // Відокремлюємо Base64-контент\n                  },\n                  features: [\n                    {\n                      type: 'TEXT_DETECTION', // Використовуємо розпізнавання тексту\n                    },\n                  ],\n                },\n              ],\n            }),\n          }\n        );\n\n        const result = await response.json();\n\n        // const result = {\n        //   responses: [\n        //     {\n        //       fullTextAnnotation: {\n        //         pages: [\n        //           {\n        //             property: {},\n        //             width: 640,\n        //             height: 480,\n        //             blocks: [\n        //               {\n        //                 boundingBox: {\n        //                   vertices: [\n        //                     { x: 151, y: 257 },\n        //                     { x: 273, y: 229 },\n        //                     { x: 281, y: 263 },\n        //                     { x: 159, y: 291 },\n        //                   ],\n        //                 },\n        //                 paragraphs: Array(1),\n        //                 blockType: 'TEXT',\n        //               },\n        //             ],\n        //           },\n        //         ],\n        //         text: 'CD 412',\n        //       },\n        //       textAnnotations: [\n        //         { locale: 'en', description: 'CD 412', boundingPoly: {} },\n        //         { description: 'CD', boundingPoly: {} },\n        //         { description: '412', boundingPoly: {} },\n        //       ],\n        //     },\n        //   ],\n        // };\n        console.log('result', result);\n        const detectedText =\n          result.responses[0].fullTextAnnotation?.text || 'Текст не розпізнано';\n        setAnnotations(result.responses[0].fullTextAnnotation.pages[0].blocks);\n        setIsProcessing(false);\n        console.log('detectedText', detectedText);\n        onRecognized(detectedText);\n      } catch (error) {\n        console.error('Error with Vision API:', error);\n        setIsProcessing(false);\n        alert('Сталася помилка при розпізнаванні тексту.');\n      }\n    }\n  };\n\n  // const annotations = [\n  //   {\n  //     boundingBox: {\n  //       vertices: [\n  //         { x: 151, y: 257 },\n  //         { x: 273, y: 229 },\n  //         { x: 281, y: 263 },\n  //         { x: 159, y: 291 },\n  //       ],\n  //     },\n  //   },\n  //   // Можна додати інші області\n  // ];\n\n  return (\n    <Flex justify=\"center\" height=\"calc(100vh - 140px)\" position=\"relative\">\n      {image ? (\n        <AnnotatedImage imageSrc={image} annotations={annotations} />\n      ) : (\n        <>\n          {/* Відеопотік */}\n          <Box\n            position=\"relative\"\n            display=\"inline-block\"\n            w=\"100%\"\n            height=\"100%\"\n          >\n            <video\n              ref={videoRef}\n              style={{\n                width: '100%',\n                height: '100%',\n                // maxWidth: '400px',\n                border: '1px solid #ccc',\n                borderRadius: '8px',\n              }}\n            />\n            {/* Canvas для обробки (не відображається) */}\n            <canvas ref={canvasRef} style={{ display: 'none' }} />\n          </Box>\n        </>\n      )}\n      <button\n        style={{\n          position: 'absolute',\n          bottom: '10px',\n          width: '50px',\n          height: '50px',\n          borderRadius: '30px',\n          backgroundColor: 'gray',\n        }}\n        onClick={handleCapture}\n      ></button>\n    </Flex>\n  );\n};\n\nexport default OCRScanner;\n","import {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n} from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport OCRScanner from './OCRScanner';\n// import { ref } from 'firebase/storage';\n// import { db } from 'firebase/config';\n\nconst ModalScan = ({ isOpen, onClose }) => {\n  const [allowedTexts, setAllowedTexts] = useState([]);\n\n  const handleRecognized = text => {\n    setAllowedTexts(pref => [...pref, text]);\n  };\n\n  return createPortal(\n    <Modal\n      motionPreset=\"slideInBottom\"\n      isOpen={isOpen}\n      onClose={onClose}\n      size=\"full\"\n      isCentered\n    >\n      <ModalOverlay />\n      <ModalContent mt={20} borderTopRadius={20}>\n        <ModalHeader>Real-Time OCR Scanner Text: {allowedTexts}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody p={4} h=\"100%\">\n          <OCRScanner onRecognized={handleRecognized} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>,\n    document.getElementById('modalScan')\n  );\n};\n\nexport default ModalScan;\n","import { Container } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport ModalWrapper from 'components/Modals/Modal';\nimport AddCarForm from 'components/AddCarForm/AddCarForm';\nimport { addsNewCar } from 'app';\nimport CarsBox from 'components/CarsBox/CarsBox';\nimport FilterPanel from 'components/FilterPanel/FilterPanel';\nimport ModalScan from 'components/Modals/ModalScan/ModalScan';\n\nconst Cars = () => {\n  const [isOpenModalAddCar, setIsOpenModalAddCar] = useState(false);\n  const [isOpenModalScan, setIsOpenModalScan] = useState(false);\n  const [search, setSearch] = useState('');\n  const [typeCars, setTypeCars] = useState('');\n  const [hasAirConditioner, setHasAirConditioner] = useState(false);\n  const [hasFridge, setHasFridge] = useState(false);\n  const [drivingStyle, setDrivingStyle] = useState('');\n  const [isGridView, setIsGridView] = useState(false);\n  const [hasHeating, setHasHeating] = useState(false);\n  const [hasSoundProofed, setHasSoundProofed] = useState(false);\n\n  const handleSubmitAddCar = async formData => {\n    await addsNewCar(formData);\n    setIsOpenModalAddCar(false);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Cars</title>\n      </Helmet>\n\n      <Container\n        w={'100%'}\n        maxW={{ base: '100%', md: '95vw', xl: '80vw' }}\n        p={2}\n      >\n        <FilterPanel\n          search={search}\n          setSearch={setSearch}\n          typeCars={typeCars}\n          setTypeCars={setTypeCars}\n          drivingStyle={drivingStyle}\n          setDrivingStyle={setDrivingStyle}\n          hasAirConditioner={hasAirConditioner}\n          setHasAirConditioner={setHasAirConditioner}\n          hasFridge={hasFridge}\n          setHasFridge={setHasFridge}\n          setIsOpenModalAddCar={setIsOpenModalAddCar}\n          isGridView={isGridView}\n          setIsGridView={setIsGridView}\n          hasHeating={hasHeating}\n          setHasHeating={setHasHeating}\n          hasSoundProofed={hasSoundProofed}\n          setHasSoundProofed={setHasSoundProofed}\n          setIsOpenModalScan={setIsOpenModalScan}\n        />\n        <CarsBox\n          filters={{\n            search,\n            typeCars,\n            drivingStyle,\n            hasAirConditioner,\n            hasHeating,\n            hasFridge,\n            hasSoundProofed,\n          }}\n          isGridView={isGridView}\n        />\n      </Container>\n\n      {isOpenModalAddCar && (\n        <ModalWrapper\n          isOpen={isOpenModalAddCar}\n          onClose={() => setIsOpenModalAddCar(false)}\n        >\n          <AddCarForm onSubmit={handleSubmitAddCar} />\n        </ModalWrapper>\n      )}\n      {isOpenModalScan && (\n        <ModalScan\n          isOpen={isOpenModalScan}\n          onClose={() => setIsOpenModalScan(false)}\n        ></ModalScan>\n      )}\n    </>\n  );\n};\n\nexport default Cars;\n"],"names":["getColorDrivingStyle","style","getSortCars","a","b","regex","textA","numberA","name","match","textB","numberB","textComparison","localeCompare","parseInt","_ref","filters","isGridView","search","typeCars","drivingStyle","hasAirConditioner","hasFridge","hasHeating","hasSoundProofed","cars","setCars","useState","loading","setLoading","useEffect","carsCollection","collection","db","unsubscribe","onSnapshot","snapshot","filteredCars","docs","map","doc","id","data","filter","car","matchesSearch","includes","matchesType","type","matchesTypeDrivingStyle","matchesAirConditioner","matchesFridge","matchesHeating","matchesSoundProofed","_jsx","Grid","pt","w","templateColumns","base","md","xl","gap","children","sort","Link","to","concat","_jsxs","Flex","flexDirection","alignItems","justify","p","borderWidth","borderRadius","boxShadow","bg","Text","fontWeight","fontSize","Box","display","FaSnowflake","color","GiHotSurface","FaBox","MdVolumeOff","px","MotionBox","motion","setTypeCars","setDrivingStyle","setHasAirConditioner","setHasFridge","setHasHeating","setHasSoundProofed","isOpen","onOpen","onClose","useDisclosure","startY","setStartY","filterMenuRef","useRef","activeFilters","Boolean","length","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","body","classList","add","remove","ref","position","IconButton","icon","CloseIcon","FaFilter","onClick","top","right","width","height","justifyContent","initial","opacity","animate","overflow","left","zIndex","onTouchStart","e","console","log","touches","clientY","onTouchEnd","endY","changedTouches","transition","duration","VStack","align","spacing","ml","size","FaFilterCircleXmark","handleCleanFilter","Menu","MenuButton","as","Button","rightIcon","ChevronDownIcon","MenuList","MenuItem","Checkbox","isChecked","onChange","prev","bgColor","mt","setSearch","setIsOpenModalAddCar","setIsGridView","setIsOpenModalScan","handleSelect","IoScan","InputGroup","InputLeftElement","pointerEvents","IoSearch","Input","value","toUpperCase","placeholder","ListViewSwitcher","FilterMobMenu","_hover","AddIcon","minW","Icon","boxSize","mr","Switch","colorScheme","leftIcon","imageSrc","annotations","canvasRef","canvas","ctx","getContext","image","Image","onload","drawImage","forEach","annotation","vertices","boundingBox","beginPath","moveTo","x","y","vertex","index","lineTo","closePath","lineWidth","strokeStyle","stroke","src","border","onRecognized","isProcessing","setIsProcessing","videoRef","setImage","setAnnotations","startCamera","useCallback","navigator","mediaDevices","getUserMedia","video","facingMode","then","stream","srcObject","play","catch","error","alert","getTracks","track","stop","AnnotatedImage","_Fragment","bottom","backgroundColor","async","videoWidth","videoHeight","toDataURL","_result$responses$0$f","response","fetch","process","method","headers","JSON","stringify","requests","content","split","features","result","json","detectedText","responses","fullTextAnnotation","text","pages","blocks","allowedTexts","setAllowedTexts","createPortal","Modal","motionPreset","isCentered","ModalOverlay","ModalContent","borderTopRadius","ModalHeader","ModalCloseButton","ModalBody","h","OCRScanner","pref","getElementById","Cars","isOpenModalAddCar","isOpenModalScan","Helmet","Container","maxW","FilterPanel","CarsBox","ModalWrapper","AddCarForm","onSubmit","addsNewCar","formData","ModalScan"],"sourceRoot":""}